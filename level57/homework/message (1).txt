Here are 50 tasks focused purely on `const`, `let`, arithmetic operations, comparison operations, and data types (`number`, `boolean`, `string`) without using control flow (`if`, `for`, etc.):

### Tasks with `const` and `let`
1. **Task**: Declare a `const` variable `greeting` with the value `"Hello, world!"`. Log the variable.
2. **Task**: Declare a `let` variable `counter` and assign it the value `0`. Log the value.
3. **Task**: Change the value of `counter` to `10`. Log the updated value.
4. **Task**: Declare a `const` variable `birthYear` and assign your birth year. Log the variable.
5. **Task**: Declare two variables `x` and `y` using `let`, assign them numeric values, and log their sum.
6. **Task**: Declare a `const` variable `firstName` with your first name and log it.
7. **Task**: Use `let` to declare a variable `temperature` and set it to `25`. Log the value.
8. **Task**: Declare a `const` variable `isAdult` and set it to `true`. Log the result.
9. **Task**: Declare a `let` variable `age` and assign it a value. Reassign a new value to `age` and log it.
10. **Task**: Declare a `const` variable `PI` with the value `3.14159`. Log the value.

### Arithmetic Operations
11. **Task**: Declare two variables `a` and `b` and set them to `5` and `3`. Log the result of `a + b`.
12. **Task**: Multiply two numbers `7` and `9`, and store the result in a variable. Log the result.
13. **Task**: Declare two variables `m` and `n` and perform division (`m / n`). Log the result.
14. **Task**: Perform subtraction of `15` minus `8` and log the result.
15. **Task**: Use the modulus operator to find the remainder of `10` divided by `4`. Log the result.
16. **Task**: Add `100` to a variable `num` set to `200` and log the result.
17. **Task**: Multiply `20` by `4`, then divide the result by `10`. Log the final result.
18. **Task**: Declare two variables `height` and `width`, multiply them to calculate the area of a rectangle. Log the area.
19. **Task**: Square the number `6` using the exponentiation operator (`**`) and log the result.
20. **Task**: Subtract `50` from `100`, divide the result by `2`, and log it.

### Comparison Operations
21. **Task**: Declare two variables `x` and `y` with values `20` and `15`. Use `>` to check if `x` is greater than `y`. Log the result.
22. **Task**: Use `===` to check if two variables `a` and `b`, set to `10` and `'10'`, are strictly equal. Log the result.
23. **Task**: Declare two variables `age1` and `age2`, set to `18` and `20`. Use `<` to compare them and log the result.
24. **Task**: Compare two numbers `5` and `10` using `<=`. Log the result.
25. **Task**: Use `!==` to check if two variables `p` and `q`, set to `7` and `8`, are not equal. Log the result.
26. **Task**: Compare if `10` is greater than or equal to `10` using `>=`. Log the result.
27. **Task**: Declare two string variables `apple` and `banana` and compare them using `==`. Log whether they are equal.
28. **Task**: Compare two boolean values `true` and `false` using `!==`. Log the result.
29. **Task**: Use `>` to check if `5` is greater than `3`. Log the result.
30. **Task**: Declare two numbers `8` and `12`. Use `<` to compare them. Log the result.

### Data Type: Number
31. **Task**: Declare a variable `myNumber` with the value `45`. Log the type using `typeof`.
32. **Task**: Perform the division of `100` by `4`, store the result in `result`, and log `typeof result`.
33. **Task**: Use `typeof` to check the type of the result of `5 + 7`. Log the result.
34. **Task**: Declare a variable `largeNumber` with the value `1000000`. Log the variable.
35. **Task**: Declare two variables `num1` and `num2`, set them to `20` and `5`. Add them together and log the result.
36. **Task**: Subtract `30` from `50` and log the result.
37. **Task**: Use multiplication to find the product of `6` and `8`. Log the result.
38. **Task**: Declare a number variable `totalAmount` and set it to `500`. Log the value.
39. **Task**: Perform a modulus operation to find the remainder when `13` is divided by `5`. Log the result.
40. **Task**: Use `typeof` to check if the result of `9 / 3` is a number. Log the result.

### Data Type: Boolean
41. **Task**: Declare a boolean variable `isSunny` and set it to `true`. Log the variable.
42. **Task**: Use the `!` (not) operator on a boolean variable `isRaining` set to `false`. Log the result.
43. **Task**: Declare two boolean variables `hasDriverLicense` and `hasCar`. Use `typeof` to check their types and log the results.
44. **Task**: Declare a boolean variable `isOpen` and set it to `false`. Log the value.
45. **Task**: Use `typeof` to check if the result of `5 > 3` is a boolean. Log the result.
46. **Task**: Declare a boolean variable `isActive` and set it to `true`. Log the type of the variable.
47. **Task**: Use `!==` to compare `true` and `false`. Log the result.
48. **Task**: Declare a boolean variable `isCompleted` and assign `false`. Log the variable.
49. **Task**: Use `typeof` to check if `false` is a boolean. Log the result.
50. **Task**: Declare a boolean variable `isLoggedIn` and set it to `true`. Log the value.

These tasks cover many aspects of working with `const`, `let`, arithmetic, comparisons, and basic data types like `number`, `boolean`, and `string`.