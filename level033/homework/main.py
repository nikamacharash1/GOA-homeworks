<<<<<<< HEAD
#1  კომენტარების გამოყენებით ახსენით რა არის და როგორ გამოიყენება css
#   Cascading Style Sheets, CSS) — სტილთა ფურცლების ენა, რომელიც გამოიყენება მონიშვნის ენით დაწერილი 
# დოკუმენტის წარდგინების აღსაწერად, მაგალითად HTML-ის გამოყენებით. CSS არის მსოფლიო აბლაბუდის ტექნოლოგიური ქვაკუთხედი, 
# HTML-თან და JavaScript-თან ერთად. CSS შემუშავებულია კონტენტის და მისი წარდგენის, მათ შორის ფერების, ფონტების და გაწყობის გაცალკევებისათვის. 
# ამგვარ გაცალკევებას შეუძლია გააუმჯობესოს კონტენტის ხელმისაწვდომობა, უზრუნველყოს წარდგენის თვისებების განსაზღვრის უფრო მეტი მოქნილობა და მართვადობა,
#  უზრუნველყოს მრავალი ვებგვერდის მიერ საზიარო ფორმატირების გამოყენება შესაბამისი სტილების განცალკევებულ .css ფაილში აღწერით, რაც ამცირებს კონტენტის სტრუქტურაში სირთულესა და გამეორებადობას, 
# ისევე როგორც უზრუნველყოს .css ფაილის კეშირება, რაც საზიარო სტილის და ფორმატირების მქონე სხვადასხვა გვერდის ჩატვირთვის სიჩქარეს აამაღლებს.

# 2 ახსენით რა განსხვავებაა inline, internal და external css-ის კოდის წერის ტექნიკებს შორის. დაწერეთ თითოეულის დადებითი მხარეც. შეგიძლიათ ონლაინ რესურსების გამოყენებაც.
# inline CSS-ის გამოყენების დადებითი მხარეა, მისი მარტივად გამოყენება, მისი დახმარებით შეგვიძლია უმარტივესად გავსტილოთ კონკრეტული ელემენტი დამატებითი CSS ფაილის შექმნის გარეშე.
# internal CSS-ის გამოყენება ხდება სპეციალურ style თეგში, რომელიც მოთავსებული უნდა იყოს <head></head> თეგის შიგნით და აუცილებელია თეგს ქონდეს გახსნის და დახურვის თეგები <style></style>
# მოცემული თეგების შიგნით ჩვენ შეგვიძლია სტანდარტული CSS სინტაქსის დახმარებით დავწეროთ კოდი, რომელიც გავრცელდება მთლიანად დოკუმენტის იმ ელემენტებზე რომლებზეც ვიმოქმედებთ
#  external CSS დეველოპმენტში ყველაზე გამოყენებული ტიპია, ის საშუალებას გვაძლევს გავმიჯონთ ერთმანეთისგან HTML დოკუმენტი და CSS-ის კოდი.
# external CSS იდეალური საშუალებაა დიდი ზომის პროექტების დასაწერად, რადგან ყველა ფაილი თუ დოკუმენტი ცალ-ცალკე ერთმანეთისგან განცალკევებულად გვაქვს.
# external CSS-ის გამოყენება ხდება <head></head> თეგში, <link> თეგის დახმარებით, რომელსაც არ სჭირდება დახურვის თეგი


# 8) კომენტარების გამოყენებით ახსენით რა არის კუთვნილება, მნიშვნელობა და css-ის დეკლარაცია
# კუთვნილება (selector) განსაზღვრავს, რომელი HTML ელემენტზე უნდა შეიძებოს სტილი.
# მნიშვნელობა (property) აღწერს, თუ რომელი თვისებები უნდა განახლდეს ელემენტზე.
# CSS-ის დეკლარაცია (CSS declaration) შეიცავს property-სა და მის მნიშვნელობას, რაც განსაზღვრავს სტილს


# 9: კომენტარის გამოყენებით ახსენით თუ როგორ მუშაობს შემდეგი კუთვნილებები: color, background-color, font-size, font-weight, text-align
#color კუთვნილება განსაზღვრავს ტექსტის ფერს. 
# background-color კუთვნილება განსაზღვრავს უკანა ფონის ფერს.
# font-size კუთვნილება განსაზღვრავს ტექსტის ზომას. 
# font-weight კუთვნილება განსაზღვრავს ტექსტის სისქეს.
=======
#1  კომენტარების გამოყენებით ახსენით რა არის და როგორ გამოიყენება css
#   Cascading Style Sheets, CSS) — სტილთა ფურცლების ენა, რომელიც გამოიყენება მონიშვნის ენით დაწერილი 
# დოკუმენტის წარდგინების აღსაწერად, მაგალითად HTML-ის გამოყენებით. CSS არის მსოფლიო აბლაბუდის ტექნოლოგიური ქვაკუთხედი, 
# HTML-თან და JavaScript-თან ერთად. CSS შემუშავებულია კონტენტის და მისი წარდგენის, მათ შორის ფერების, ფონტების და გაწყობის გაცალკევებისათვის. 
# ამგვარ გაცალკევებას შეუძლია გააუმჯობესოს კონტენტის ხელმისაწვდომობა, უზრუნველყოს წარდგენის თვისებების განსაზღვრის უფრო მეტი მოქნილობა და მართვადობა,
#  უზრუნველყოს მრავალი ვებგვერდის მიერ საზიარო ფორმატირების გამოყენება შესაბამისი სტილების განცალკევებულ .css ფაილში აღწერით, რაც ამცირებს კონტენტის სტრუქტურაში სირთულესა და გამეორებადობას, 
# ისევე როგორც უზრუნველყოს .css ფაილის კეშირება, რაც საზიარო სტილის და ფორმატირების მქონე სხვადასხვა გვერდის ჩატვირთვის სიჩქარეს აამაღლებს.

# 2 ახსენით რა განსხვავებაა inline, internal და external css-ის კოდის წერის ტექნიკებს შორის. დაწერეთ თითოეულის დადებითი მხარეც. შეგიძლიათ ონლაინ რესურსების გამოყენებაც.
# inline CSS-ის გამოყენების დადებითი მხარეა, მისი მარტივად გამოყენება, მისი დახმარებით შეგვიძლია უმარტივესად გავსტილოთ კონკრეტული ელემენტი დამატებითი CSS ფაილის შექმნის გარეშე.
# internal CSS-ის გამოყენება ხდება სპეციალურ style თეგში, რომელიც მოთავსებული უნდა იყოს <head></head> თეგის შიგნით და აუცილებელია თეგს ქონდეს გახსნის და დახურვის თეგები <style></style>
# მოცემული თეგების შიგნით ჩვენ შეგვიძლია სტანდარტული CSS სინტაქსის დახმარებით დავწეროთ კოდი, რომელიც გავრცელდება მთლიანად დოკუმენტის იმ ელემენტებზე რომლებზეც ვიმოქმედებთ
#  external CSS დეველოპმენტში ყველაზე გამოყენებული ტიპია, ის საშუალებას გვაძლევს გავმიჯონთ ერთმანეთისგან HTML დოკუმენტი და CSS-ის კოდი.
# external CSS იდეალური საშუალებაა დიდი ზომის პროექტების დასაწერად, რადგან ყველა ფაილი თუ დოკუმენტი ცალ-ცალკე ერთმანეთისგან განცალკევებულად გვაქვს.
# external CSS-ის გამოყენება ხდება <head></head> თეგში, <link> თეგის დახმარებით, რომელსაც არ სჭირდება დახურვის თეგი


# 8) კომენტარების გამოყენებით ახსენით რა არის კუთვნილება, მნიშვნელობა და css-ის დეკლარაცია
# კუთვნილება (selector) განსაზღვრავს, რომელი HTML ელემენტზე უნდა შეიძებოს სტილი.
# მნიშვნელობა (property) აღწერს, თუ რომელი თვისებები უნდა განახლდეს ელემენტზე.
# CSS-ის დეკლარაცია (CSS declaration) შეიცავს property-სა და მის მნიშვნელობას, რაც განსაზღვრავს სტილს


# 9: კომენტარის გამოყენებით ახსენით თუ როგორ მუშაობს შემდეგი კუთვნილებები: color, background-color, font-size, font-weight, text-align
#color კუთვნილება განსაზღვრავს ტექსტის ფერს. 
# background-color კუთვნილება განსაზღვრავს უკანა ფონის ფერს.
# font-size კუთვნილება განსაზღვრავს ტექსტის ზომას. 
# font-weight კუთვნილება განსაზღვრავს ტექსტის სისქეს.
>>>>>>> 52b68c66241e3ada5f3faddd06b0eb87c89a924c
# text-align კუთვნილება განსაზღვრავს ტექსტის ადგილმდებარეობას.